#!/usr/bin/env bash
############################################################
# Help                                                     #
############################################################

function Help
{
   # Display Help
   echo "This script generates a pull request message or a git diff summary."
   echo
   echo "Syntax: git-messages-utils [-h] [-g|-p]"
   echo "Options:"
   echo "-h                       Print this Help."
   echo "-p                       Create pull request."
   echo "-s                       Create git diff summary."
   echo "Environment Variables:
    OLLAMA_ENDPOINT  The endpoint to check for availability (default: http://localhost:11434).
    DEFAULT_BRANCH   The branch to compare against (default: main)."
}

############################################################
# Configuration Defaults                                   #
############################################################
OLLAMA_ENDPOINT="${OLLAMA_ENDPOINT:-http://localhost:11434}"
DEFAULT_BRANCH="${DEFAULT_BRANCH:-main}"

# Set Variables
function set_variables(){
 case $option in
    p)
       FABRIC_PATTERN="write_pull-request"
       LOADING_MESSAGE="Generating pull request summary..."
       SUCCESS_MESSAGE="✅ Git pull request summary generated and copied to clipboard."
       ERROR_MESSAGE="❌ Error: Failed to generate pull request summary message with fabric."
       ;;
    s)
       FABRIC_PATTERN="summarize_git_diff"
       LOADING_MESSAGE="Generating git diff summary..."
       SUCCESS_MESSAGE="✅ Git diff summary generated and copied to clipboard."
       ERROR_MESSAGE="❌ Error: Failed to generate git diff summary message with fabric."
       ;;
 esac

FABRIC_COMMAND="pbpaste | fabric -p $FABRIC_PATTERN -c"

}

# Check if the endpoint is accessible
function check_endpoint {
  if curl --silent --head --fail "$OLLAMA_ENDPOINT" > /dev/null; then
    echo "✅ Ollama endpoint is accessible."
  else
    echo "❌ Error: Ollama is not running at $OLLAMA_ENDPOINT."
    exit 1
  fi
}

# Run the prompt and process it with fabric
function process_git_diff {
  local diff
  diff=$(git --no-pager diff "$DEFAULT_BRANCH")
  if [[ -z "$diff" ]]; then
    echo "No changes detected in the diff against $DEFAULT_BRANCH. Exiting."
    exit 0
  fi

  # Copy diff to clipboard
  echo "$diff" | pbcopy
}

function run_prompt {
   if ! gum spin --show-output --spinner minidot --title "$LOADING_MESSAGE" -- bash -c "$FABRIC_COMMAND"; then
     echo "$ERROR_MESSAGE"
     exit 1
   fi
   echo "$SUCCESS_MESSAGE"
}

############################################################
# Main program                                             #
############################################################

# Get the options
while getopts ":hps" option; do
   case $option in
      h) # display Help
         Help
         exit;;
      p|s)
         set_variables
         check_endpoint
         process_git_diff
         run_prompt
         ;;
      *) # Invalid option
         echo "❌ Error: Invalid option"
         Help
         exit 1
         ;;
   esac
done

